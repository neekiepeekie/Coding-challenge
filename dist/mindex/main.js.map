{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/backendless-mock.service.ts","webpack:///./src/app/employee-list/employee-list.component.css","webpack:///./src/app/employee-list/employee-list.component.html","webpack:///./src/app/employee-list/employee-list.component.ts","webpack:///./src/app/employee.service.ts","webpack:///./src/app/employee.ts","webpack:///./src/app/employee/employee.component.css","webpack:///./src/app/employee/employee.component.html","webpack:///./src/app/employee/employee.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".page-title {\\n  text-align: center;\\n}\\n\"","module.exports = \"<h1 class=\\\"page-title\\\">Mindex Coding Challenge</h1>\\n<app-employee-list></app-employee-list>\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatCardModule, MatGridListModule, MatIconModule, MatInputModule, MatMenuModule} from '@angular/material';\nimport {HttpClientInMemoryWebApiModule} from 'angular-in-memory-web-api';\n\nimport {AppComponent} from './app.component';\nimport {BackendlessMockService} from './backendless-mock.service';\nimport {EmployeeComponent} from './employee/employee.component';\nimport {EmployeeListComponent} from './employee-list/employee-list.component';\nimport {EmployeeService} from './employee.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    EmployeeListComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(BackendlessMockService, {\n      apiBase: 'api/',\n      delay: 250,\n      passThruUnknownUrl: true,\n      post204: false,\n      put204: false\n    }),\n    MatCardModule,\n    MatGridListModule,\n    MatInputModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {InMemoryDbService} from 'angular-in-memory-web-api';\n\nexport class BackendlessMockService implements InMemoryDbService {\n\n  createDb() {\n    const employees = [\n      {\n        id: 1,\n        firstName: 'Brian',\n        lastName: 'McGee',\n        position: 'CEO',\n        directReports: [{\"firstName\": 'Homer', \"lastName\": 'Thompson', 'position': 'Dev Manager'},\n                        {\"firstName\": 'Rock',  \"lastName\": 'Strongo',  'position': 'Lead Tester'}]\n      },\n      {\n        id: 2,\n        firstName: 'Homer',\n        lastName: 'Thompson',\n        position: 'Dev Manager',\n        directReports: [{\"firstName\": 'Max', \"lastName\": 'Power', 'position': 'Junior Software Engineer'}]\n      },\n      {\n        id: 3,\n        firstName: 'Rock',\n        lastName: 'Strongo',\n        position: 'Lead Tester'\n      },\n      {\n        id: 4,\n        firstName: 'Max',\n        lastName: 'Power',\n        position: 'Junior Software Engineer'\n      }\n    ];\n    return {employees};\n  }\n}\n\n\n","module.exports = \"mat-grid-tile {\\r\\n    height: 0.1%;\\r\\n}\"","module.exports = \"<mat-grid-list class=\\\"employee-list\\\" cols=\\\"2\\\" rowHeight=\\\"4:1\\\">\\n    <mat-grid-tile *ngFor=\\\"let emp of employees\\\" colspan=\\\"2\\\">\\n        <app-employee [employee]=\\\"emp\\\"></app-employee>\\n    </mat-grid-tile>\\n</mat-grid-list>\"","import {\n  Component, OnInit\n}\nfrom '@angular/core';\nimport {\n  catchError, map, reduce\n}\nfrom 'rxjs/operators';\n\nimport {\n  Employee\n}\nfrom '../employee';\nimport {\n  EmployeeService\n}\nfrom '../employee.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  employees: Employee[] = [];\n  errorMessage: string;\n\n  constructor(private employeeService: EmployeeService) {}\n\n  ngOnInit(): void {\n      this.employeeService.getAll()\n          .pipe(\n              reduce((emps, e: Employee) => emps.concat(e), []),\n              map(emps => this.employees = emps),\n              catchError(this.handleError.bind(this))\n          ).subscribe();\n  }\n\n      private handleError(e: Error | any): string {\n      console.error(e);\n      return this.errorMessage = e.message || 'Unable to retrieve employees';\n  }\n}","import {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {from, Observable, throwError} from 'rxjs';\nimport {catchError, flatMap} from 'rxjs/operators';\n\nimport {Employee} from './employee';\n\n@Injectable()\nexport class EmployeeService {\n  private url = '/api/employees';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(): Observable<Employee> {\n    return this.http.get<Employee[]>(this.url)\n      .pipe(\n        flatMap(emps => from(emps)),\n        catchError(this.handleError)\n      );\n  }\n\n  get(id: number): Observable<Employee> {\n    return this.http.get<Employee>(`${this.url}/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  save(emp: Employee): Observable<Employee> {\n    const response = (!!emp.id) ? this.put(emp) : this.post(emp);\n    return response.pipe(catchError(this.handleError));\n  }\n\n  remove(emp: Employee): Observable<never> {\n    return this.http\n      .delete<never>(`${this.url}/${emp.id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  private post(emp: Employee): Observable<Employee> {\n    return this.http.post<Employee>(this.url, emp);\n  }\n\n  private put(emp: Employee): Observable<Employee> {\n    return this.http.put<Employee>(`${this.url}/${emp.id}`, emp);\n  }\n\n  private handleError(res: HttpErrorResponse | any): Observable<never> {\n    return throwError(res.error || 'Server error');\n  }\n}\n","export class Employee {\n  id: number;\n  firstName: string;\n  lastName: string;\n  position: string;\n  directReports?: Array<number>;\n  compensation: number;\n}\n","module.exports = \".employee {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    min-width: 1300px;\\r\\n    margin: 4px\\r\\n}\\r\\n\\r\\ndl {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n    display: flex;\\r\\n}\"","module.exports = \"<mat-card class=\\\"employee\\\">\\n    <mat-card-header>\\n        <mat-card-title>{{employee.firstName}} {{employee.lastName}}, {{employee.position}}</mat-card-title>\\n        <mat-card-subtitle><b>Employee ID:</b> {{employee.id}} <b>Direct Reports</b>: {{totalEmployeeReports}} </mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n    </mat-card-content>\\n</mat-card>\"","import {\n  Component, Input, OnInit\n}\nfrom '@angular/core';\n\nimport {\n  Employee\n}\nfrom '../employee';\nimport {\n  EmployeeService\n}\nfrom '../employee.service';\nimport {\n  Observable, from\n}\nfrom 'rxjs';\nimport {\n  flatMap\n}\nfrom 'rxjs/operators';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  @Input() employee: Employee;\n  compensation: number;\n  totalEmployeeReports: number;\n\n  constructor(private employeeService: EmployeeService) {\n      this.totalEmployeeReports = 0;\n\n  }\n  ngOnInit() {\n      this.setTotalReports(this.employee);\n\n  }; // End Controller\n\n  setTotalReports(employee: Employee) {\n\n      if (this.employee && employee.directReports) {\n\n          this.totalEmployeeReports += employee.directReports.length;\n          from(employee.directReports).pipe(\n              flatMap(id => < Observable < Employee >>\n                  this.employeeService.get(id))\n          ).subscribe(\n              nextEmployee => this.setTotalReports(nextEmployee)\n          );\n      }\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}